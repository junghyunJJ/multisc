
pylmm is a fast and lightweight linear mixed-model solver for use in genome-wide association studies.
You need to install numpy and scipy to use pylmm.  If you are a hoffman user, then these are already installed.
If you only want to use the GWAS programs and you already have numpy and scipy installed, then you can just execute the 
programs directly.  If you want to install the pylmm libraries for use in your own code, then there is an additional step.
Details on all of these issues are found below.

--------- PREREQUISITES --------

Numpy - http://www.numpy.org/
Scipy - http://www.scipy.org/

--------- USING pylmm ---------

If you want to use the pylmm scripts (pylmmGWAS.py and pylmmKinship.py) and do not need to use the lower level libraries,
then you can just execute the scripts as follows.  Say that your pylmm is unzipped in the directory $PYLMM, then do this.

python $PYLMM/pylmmGWAS.py --help

This command should show you the help menu for the GWAS script and you should be able to use it directly.

   -------- FOR HOFFMAN USERS AT UCLA --------

      If you are using hoffman, then numpy and scipy are installed.  You just 
      need to tell the system that you want to use them.
      You can do that by executing 'module load python' on the command line.  
      This command gives you access to the numpy and scipy libraries.  It might be a good idea to
      also add this command to your .bash_profile or .bash_rc file, so that you
      don't have to execute the command each time you want to use pylmm.


------ INSTALLING THE pylmm LIBRARIES ------

If you want to install pylmm so that you can use the libraries in your own code,
then you will need to place the library files under your python root.  
Here is one way to do that.

1) get pylmm and place it in some directory.  For example $HOME/pylmm, lets
call this directory $PYLMM

2) You should place the module files under $PYLMM/pylmm into some directory that is in your python path.  Or you could just add the following line to your .bash_profile or .bash_rc file in your home directory.

   export PYTHONPATH=$PYTHONPATH:$PYLMM/pylmm
   
3) If you placed the code in your python path or if you have executed the
export command, then you should be able to access the modules.

Try This in a python shell (just type python in the bash shell): 

   import pylmm

If you are able import pylmm, then your paths are correct and everything should work.

